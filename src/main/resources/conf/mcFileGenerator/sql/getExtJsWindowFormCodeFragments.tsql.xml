<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <bean id="getExtJsWindowFormCodeFragments" class="com.tjhruska.mc.util.tagReplacement.SQLTemplate">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="dataSource" ref="dataSource" />
        <property name="template">
            <value><![CDATA[
-------------------------
--Section 10.000 - begin window definition
--id,sequence,sequence2,suppress_changes_flag,folder_tag,java_package,fileName,fileName2,fragment2,fragment
select t.mc_table_id as id, 10.000 as sequence, '0.000' as sequence2, false as suppress_changes_flag, 
  'extJsDirectory' as folder_tag, 
  null as java_package, 
  max('windowForm' || t.name_camel_case || '.js') as fileName, 
  null as fileName2, null as fragment2,
E'var windowForm' || t.name_camel_case || E'Map;
var windowForm' || t.name_camel_case || E';' || string_agg(case when c.mc_column_id is null then '' else E'

Ext.define(\'' || upper(substring(c.name_camel_case, 1, 1)) || substring(c.name_camel_case, 2, length(c.name_camel_case)) || E'\', {
    extend: \'Ext.data.Model\',
    fields: [
        {type: \'string\', name: \'key\'},
        {type: \'string\', name: \'desc\'}
    ]
});' end, '' order by c.sequence) || '

function onWindowForm' || t.name_camel_case || E'Toggle(action, ' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id){
    
    if (!windowForm' || t.name_camel_case || E'Map) {
        windowForm' || t.name_camel_case || E'Map = new Ext.util.HashMap();
    } else if (action != \'c\' && windowForm' || t.name_camel_case || E'Map.containsKey(' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id.toString())) {
        windowForm' || t.name_camel_case || E' = windowForm' || t.name_camel_case || E'Map.get(' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id.toString());
    } else {
        windowForm' || t.name_camel_case || E' = null;
    }
    
    if (!windowForm' || t.name_camel_case || E') {' || 

string_agg( case when c.mc_column_id is null then '' else '

        var ' || c.name_camel_case || E'Store = Ext.create(\'Ext.data.Store\', {
            id : \'key\',
            model: \'' || upper(substring(c.name_camel_case, 1, 1)) || substring(c.name_camel_case, 2, length(c.name_camel_case)) || 
case 
  when c.fk_gui_column_filter_foreign is null then E'\',
            proxy : {
                type : \'rest\',
                url : \'combobox/' || lower(substring(c.f_name_camel_case, 1, 1)) || substring(c.f_name_camel_case, 2, length(c.f_name_camel_case)) || E'/true/id/' || gui_c.name_camel_case || E'/\'' || E',
                reader : {
                    type : \'json\',
                    root : \'rows\'
                }
            }'
  else E'\'
            //proxy defined at runtime with filter in url'
end || '
        });' end, '' order by c.sequence
) || E' 
          
        var form = Ext.create(\'Ext.form.Panel\', {
            reader: Ext.create(\'Ext.data.reader.Json\', {
                model: \'' || t.name_camel_case || E'\',
                root : \'rows\'
            }),
            writer: Ext.create(\'Ext.data.writer.Json\', {
                model: \'' || t.name_camel_case || E'\'
            }),
            bodyStyle:\'padding:5px\',
            width: 800,
            layout: \'fit\',
            fieldDefaults: {
                labelAlign: \'left\',
                msgTarget: \'side\',
                labelWidth: 150
            },
            defaults: {
                anchor: \'100%\'
            },

            items: [{
                border : false,
                layout : \'anchor\',
                defaultType : \'textfield\',
                items : [' as fragment
from
  -=[schema_name]=-.mc_table as t
    left outer join
  (
    select 
      ic.mc_table_id, 
      ic.mc_column_id, 
      f.gui_picker_description_column_id, 
      ic.name_camel_case, 
      ic.fk_gui_column_filter_foreign,
      f.name_camel_case as f_name_camel_case,
      ic.sequence
    from
      -=[schema_name]=-.mc_column as ic
        left outer join
      -=[schema_name]=-.mc_table as f on ic.fk_table_id = f.mc_table_id
        left outer join
      -=[schema_name]=-.enumeration e on ic.fk_table_id = e.mc_table_id
    where ic.fk_table_id is not null and e.mc_table_id is null 
      and (ic.fk_orm_inverse_flag = true or ic.fk_orm_inverse_flag is null)
  ) as c on (t.mc_table_id = c.mc_table_id)
    left outer join
  -=[schema_name]=-.mc_column as gui_c on (c.gui_picker_description_column_id = gui_c.mc_column_id)
where
  t.create_gui_data_service_flag = true
group by t.mc_table_id, t.name_camel_case

UNION
--Section 20.000 - define window body - form items
--id,sequence,sequence2,suppress_changes_flag,folder_tag,java_package,fileName,fileName2,fragment2,fragment
select c.mc_table_id as id, 20.000 as sequence, '0.000' as sequence2, false as suppress_changes_flag, 
  'extJsDirectory' as folder_tag, 
  null as java_package, 
  'windowForm' || max(t.name_camel_case) || '.js' as fileName, 
  null as fileName2, null as fragment2,
  string_agg(
case
  when tab_range.min_sequence = group_range.min_column_sequence and group_range.min_sequence = c.gui_field_group_sequence then E'{
                    xtype:\'tabpanel\',
                    plain:true,
                    activeTab: 0,
                    height:\'100%\',
                    defaults:{bodyStyle:\'padding:5px\'},
                    items:['
  else ''
end ||
case
  when group_range.min_sequence = c.gui_field_group_sequence then E'{
                        title: \'' || group_range.gui_field_group_name || E'\',
                        layout : \'anchor\',
                        defaultType: \'textfield\',
                        items: ['
  else ''
end || E'{
                    ' || case when group_range.a is not null then '        ' else '' end || E'fieldLabel     : \'' || c.gui_header || E'\'' ||
case when c.gui_tool_tip is not null then ',
                    ' || case when group_range.a is not null then '        ' else '' end || E'tool_tip : \'' || c.gui_tool_tip || E'\'' else '' end ||
case
  when c.pk_flag = true then ',
                    ' || case when group_range.a is not null then '        ' else '' end || E'name: \'' || c.name_camel_case || E'\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'xtype: \'displayfield\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'submitValue: \'true\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'width : \'300px\'
                ' || case when group_range.a is not null then '        ' else '' end || E'}'
  when d.datatype_ev_id = 46 then ',
                    ' || case when group_range.a is not null then '        ' else '' end || E'name: \'' || c.name_camel_case || E'\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'xtype: \'datefield\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'format: \'Y-m-d h:i a\',
                    ' || case when group_range.a is not null then '        ' else '' end || 
                                       E'altFormats: \'c|Y/m/d|Y/m/d h:i a|m/d/Y|m/d/Y h:i a|Y-m-d|Y-m-d h:i a|m-d-Y|m-d-Y h:i a\', 
                    ' || case when group_range.a is not null then '        ' else '' end || E'submitFormat: \'c\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'width : \'330px\'
                ' || case when group_range.a is not null then '        ' else '' end || E'}'
  when  d.datatype_ev_id = 1 then ',
                    ' || case when group_range.a is not null then '        ' else '' end || E'name: \'' || c.name_camel_case || E'\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'xtype: \'checkboxfield\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'inputValue: \'true\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'uncheckedValue: \'false\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'anchor : \'97%\'
                ' || case when group_range.a is not null then '        ' else '' end || E'}'
  when e.mc_table_id is not null then ',
                    ' || case when group_range.a is not null then '        ' else '' end || E'name: \'' || c.name_camel_case || E'\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'xtype: \'combobox\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'store: ' || lower(substring(e.tablename_camel_case, 1, 1)) || substring(e.tablename_camel_case, 2, length(e.tablename_camel_case)) || 'Store,
                    ' || case when group_range.a is not null then '        ' else '' end || E'typeAhead: true,
                    ' || case when group_range.a is not null then '        ' else '' end || E'queryMode: \'local\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'displayField: \'desc\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'valueField: \'key\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'forceSelection: \'true\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'allowBlank: ' ||
                                                     case when c.not_null_flag = true then 'false' else 'true' end || ',
                    ' || case when group_range.a is not null then '        ' else '' end || E'anchor : \'97%\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'msgTarget: \'side\'
                ' || case when group_range.a is not null then '        ' else '' end || E'}'
  when c.name like '%_sql' or c.name like '%_code' then ',
                    ' || case when group_range.a is not null then '        ' else '' end || E'name: \'' || c.name_camel_case || E'\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'xtype: \'textareafield\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'allowBlank: ' ||
                                                       case when c.not_null_flag = true then 'false' else 'true' end || ',
                    ' || case when group_range.a is not null then '        ' else '' end || E'anchor : \'97%\'
                ' || case when group_range.a is not null then '        ' else '' end || E'}'
  when c.fk_table_id is not null and (c.fk_orm_inverse_flag = true or c.fk_orm_inverse_flag is null) then ',
                    ' || case when group_range.a is not null then '        ' else '' end || E'name: \'' || c.name_camel_case || E'Id\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'xtype: \'combobox\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'store: ' || c.name_camel_case || 'Store,
                    ' || case when group_range.a is not null then '        ' else '' end || E'typeAhead: true,
                    ' || case when group_range.a is not null then '        ' else '' end || E'queryMode: \'local\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'displayField: \'desc\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'valueField: \'key\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'forceSelection: \'true\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'allowBlank: ' || case when c.not_null_flag = true then 'false' else 'true' end || ',
                    ' || case when group_range.a is not null then '        ' else '' end || E'anchor : \'97%\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'msgTarget: \'side\'
                ' || case when group_range.a is not null then '        ' else '' end || E'}'
  else ',
                    ' || case when group_range.a is not null then '        ' else '' end || E'name: \'' || c.name_camel_case || case when c.fk_flag = true then 'Id' else '' end || E'\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'anchor : \'97%\',
                    ' || case when group_range.a is not null then '        ' else '' end || E'allowBlank: ' ||
                                                     case when c.not_null_flag = true then 'false' else 'true' end || '
                ' || case when group_range.a is not null then '        ' else '' end || E'}'
end ||
case 
  when group_range.max_sequence = c.gui_field_group_sequence then ']
                    }'
  else ''
end ||
case
  when tab_range.max_sequence = group_range.max_column_sequence and group_range.max_sequence = c.gui_field_group_sequence then ']
                }'
  else ''
end
, ',' order by 
  case when group_range.a is not null then 2 else 1 end,
  case when group_range.a is not null then group_range.min_column_sequence else c.sequence end, 
  c.gui_field_group_sequence) as fragment
from
    -=[schema_name]=-.mc_table t
        join
    -=[schema_name]=-.mc_column c on t.mc_table_id = c.mc_table_id
        join
    -=[schema_name]=-.datatype_ev d on c.datatype_ev_id = d.datatype_ev_id
        left outer join
    (
    select
        1 as a,
        mc_table_id,
        gui_field_group_name, 
        min(sequence) as min_column_sequence,
        max(sequence) as max_column_sequence,
        min(gui_field_group_sequence) as min_sequence,
        max(gui_field_group_sequence) as max_sequence
    from -=[schema_name]=-.mc_column
    where gui_field_group_name is not null
    group by mc_table_id, gui_field_group_name
    ) as group_range on c.mc_table_id = group_range.mc_table_id and c.gui_field_group_name = group_range.gui_field_group_name
        left outer join
    (
    select
        1 as a,
        mc_table_id,
        min(sequence) as min_sequence,
        max(sequence) as max_sequence
    from -=[schema_name]=-.mc_column
    where gui_field_group_name is not null
    group by mc_table_id
    ) as tab_range on c.mc_table_id = tab_range.mc_table_id
      left outer join
    -=[schema_name]=-.enumeration as e on c.fk_table_id = e.mc_table_id
where
  t.create_gui_data_service_flag = true
group by c.mc_table_id

UNION
-------------------------
--Section 30.000 - close out window definition
--id,sequence,sequence2,suppress_changes_flag,folder_tag,java_package,fileName,fileName2,fragment2,fragment
select t.mc_table_id as id, 30.000 as sequence, '0.000' as sequence2, false as suppress_changes_flag, 
  'extJsDirectory' as folder_tag, 
  null as java_package, 
  'windowForm' || t.name_camel_case || '.js' as fileName, 
  null as fileName2, null as fragment2, E'],

                buttons: [{
                    text: \'Save\',
                    disabled: true,
                    formBind: true,
                    handler: function(){
                        target = ' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id;
                        method = \'PUT\';
                        if (action == \'c\') {
                                target = \'\';
                                method = \'POST\';
                        }
                        form.getForm().submit({
                            url: \'crud/' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'/\' + target,
                            method: method,
                            params: Ext.encode(form.getValues()),
                            waitMsg: \'Saving my pretty, saving...\',
                            submitEmptyText: false,
                            success: function(){
                                ' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id = form.getForm().findField(\'id\').getValue();
                                action = \'u\';
                                windowForm' || t.name_camel_case || E'Map.add(' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id.toString(), this);
                            },
                            failure: function(){
                                Ext.Msg.alert("Failed to save record", "hi");
                                console.log("failed to save record");
                            }
                        });
                        console.log(form.getValues());
                        //console.log(Ext.encode(form.getValues()));
                    }
                },{
                    text: \'Cancel\',
                    ' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id: ' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id,
                    handler: function(){
                        w = windowForm' || t.name_camel_case || E'Map.get(' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id.toString());
                        windowForm' || t.name_camel_case || E'Map.removeAtKey(' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id.toString());
                        w.destroy();
                    }
                }]
            }]
        });
        windowForm' || t.name_camel_case || E' = Ext.create(\'widget.window\', {
            action: action,
            ' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id: ' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id,
            title: \'' || t.name_camel_case || E' Editor\',
            constrain: true,
            renderTo: mainPanel.getComponent(\'mainPanelCenter\').body,
            width: 800,
            height: 400,
            layout: \'fit\',
            bodyStyle: \'padding: 1px;\',
            maximizable: true,
            minimizable: true,
            items: form
        });
        windowForm' || t.name_camel_case || E'.on(\'minimize\', function() {
            if (action == \'c\') {
                windowForm' || t.name_camel_case || 'Map.removeAtKey(this.' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id);
                this.destroy();
            } else {
                this.hide();
            }
        });
        windowForm' || t.name_camel_case || E'.on(\'close\', function() {
            windowForm' || t.name_camel_case || E'Map.removeAtKey(this.' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id);
            this.destroy();
        });

        form.getForm().load({
            url: \'crud/' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'/\' + ' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id,
            method: \'GET\',
            waitMsg: \'Loading my pretty, loading...\',
            success: function(response){
                if (action == \'c\'){
                    form.getForm().findField(\'id\').setValue(null);
                } else {' || string_agg(case when c.mc_column_id is not null and c.fk_gui_column_filter_foreign is not null then E'
                    ' || c.name_camel_case || E'Store.setProxy({
                        type : \'rest\',
                        url : \'combobox/' || lower(substring(c.f_name_camel_case, 1, 1)) || substring(c.f_name_camel_case, 2, length(c.f_name_camel_case)) 
                            || E'/true/id/' || gui_c.name_camel_case || E'/' || c.fk_gui_column_filter_foreign 
                            || case 
                                 when c.fk_gui_column_filter_local is null then E'\'' 
                                 else E'/\'' || E' + form.getForm().findField(\'' || c.fk_gui_column_filter_local || E'\').getValue()' 
                               end || E',
                        reader : {
                            type : \'json\',
                            root : \'rows\'
                        }
                    });
                    ' || c.name_camel_case || E'Store.load();' else '' end, '' order by c.sequence) || '
                }
            }
        }); 
'          || string_agg(case when c.mc_column_id is null or c.fk_gui_column_filter_foreign is not null then '' else '
        '  || c.name_camel_case || E'Store.load();' end, '' order by c.sequence) || '

        //store the ' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E' in the map
        if (action == \'u\')
            windowForm' || t.name_camel_case || E'Map.add(' || max(lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case))) || E'Id.toString(), windowForm' || t.name_camel_case || E');
    }
    
    if (windowForm' || t.name_camel_case || E'.isVisible()) {
        windowForm' || t.name_camel_case || E'.hide();
    } else {
        windowForm' || t.name_camel_case || E'.show();
    }
    windowForm' || t.name_camel_case || E' = null;
}' as fragment
from
  -=[schema_name]=-.mc_table as t
    left outer join
  (
    select 
      ic.mc_table_id, 
      ic.mc_column_id, 
      ic.fk_gui_column_filter_foreign,
      ic.fk_gui_column_filter_local,
      f.gui_picker_description_column_id, 
      ic.name_camel_case, 
      f.name_camel_case as f_name_camel_case,
      ic.sequence
    from
      -=[schema_name]=-.mc_column as ic
        left outer join
      -=[schema_name]=-.mc_table as f on ic.fk_table_id = f.mc_table_id
        left outer join
      -=[schema_name]=-.enumeration e on ic.fk_table_id = e.mc_table_id
    where ic.fk_table_id is not null and e.mc_table_id is null 
      and (ic.fk_orm_inverse_flag = true or ic.fk_orm_inverse_flag is null)
  ) as c on (t.mc_table_id = c.mc_table_id)
    left outer join
  -=[schema_name]=-.mc_column as gui_c on (c.gui_picker_description_column_id = gui_c.mc_column_id)
where
  t.create_gui_data_service_flag = true
group by t.mc_table_id, t.name_camel_case
order by id, sequence, sequence2
]]></value>
        </property> 
    </bean>
    
</beans>