<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <bean id="getExtJsModelCodeFragments" class="com.tjhruska.mc.util.tagReplacement.SQLTemplateImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="dataSource" ref="dataSource" />
        <property name="template">
            <value><![CDATA[
-------------------------
--Section 10.000 - single section per file
--id,sequence,sequence2,suppress_changes_flag,folder_tag,java_package,fileName,fileName2,fragment2,fragment
select t.mc_table_id as id, 10.000 as sequence, '0.000' as sequence2, false as suppress_changes_flag, 
  'extJsDirectory' as folder_tag, 
  null as java_package, 
  'model' || max(t.name_camel_case) || '.js' as fileName, 
  null as fileName2, null as fragment2, max(E'Ext.define(\'' || t.name_camel_case || E'\', {
    extend : \'Ext.data.Model\',
    proxy : {
        type : \'rest\',
        url : \'crud/' || lower(substring(t.name_camel_case, 1, 1)) || substring(t.name_camel_case, 2, length(t.name_camel_case)) || E'\',
        reader : {
            type : \'json\',
            root : \'rows\'
        }
    },
    fields : [ {
        name : \'guiAction\', type : \'string\'
    }, {')
    || string_agg(E'
        name : \'' || 
        case when e.enumeration_id is null and c.fk_table_id is not null then c.name_camel_case || 'Id' else c.name_camel_case end 
        || E'\', type : \'' 
        || case when e.mc_table_id is null then d.hibernate || E'\'' || case when d.datatype_ev_id in (2, 4, 44, 45) then E', useNull : \'true\'' else '' end else 'string' || E'\'' end
        || case when c.pk_flag then E', mapping : \'' || c.name_camel_case || E'\'' else '' end, '
    }, {' order by c.sequence) || max(E'
    } ]
});') as fragment
from
  -=[schema_name]=-.mc_table as t
    join
  -=[schema_name]=-.mc_column c on t.mc_table_id = c.mc_table_id
    join 
  -=[schema_name]=-.datatype_ev d on c.datatype_ev_id = d.datatype_ev_id
    left outer join
  -=[schema_name]=-.enumeration e on c.fk_table_id = e.mc_table_id
where
  t.create_gui_data_service_flag = true
group by t.mc_table_id
order by id, sequence, sequence2
]]></value>
        </property> 
    </bean>
    
</beans>